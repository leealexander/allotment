@page
@model Allotment.Pages.WaterLevelSensorModel
@{
}

<h1>Water level sensor readings @(Model.IsWaterSensorOn ? "(Sensor is on)" : "(Sensor is off)")</h1>

<vc:water-level />


<div class="text-center">
    <h1 id="heading" class="display-4">Welcome</h1>
    <canvas class="my-4 w-100 chartjs-render-monitor" id="myChart" style="display: block; width: 2085px; height: 880px;" width="2085" height="880"></canvas>
</div>

<h2>Calibration readings</h2>
<form class="mt-3" asp-page-handler="SetKnownReadings" method="post">
    <div class="form-horizontal">
        <div class="form-group">
            <div class="col-md-6">
                <textarea asp-for="KnownReadings" rows="20" cols="20" spellcheck="false" class="form-control" required=true></textarea>
            </div>
        </div>
    </div>
    <div class="mt-3">
        <button type="submit" class="btn btn-primary" name="Action" value="Save">
            Save readings
        </button>
    </div>
</form>


@if (!Model.IsWaterSensorOn)
{
    <form method="post" asp-page-handler="TakeKnownReading">
        @Html.ValidationSummary()
        <div class="form-group">
            <label asp-for="KnownDepthCm">Enter Known Depth cm (Optional):</label>
            <input asp-for="KnownDepthCm" />
        </div>
        <span asp-validation-for="KnownDepthCm"></span>

        <div class="mt-3">
            <button type="submit" value="Submit" class="btn btn-primary">
                Take a water level reading
            </button>
        </div>
    </form>
}

@section scripts
{
    <script>
        const ctx = document.getElementById('myChart').getContext('2d');
        const myChart = new Chart(ctx, {
            type: 'line',
            data: {
                labels: [@Model.GraphLabels],
                datasets: [{
                    label: 'Pressure',
                    borderColor: "#bae755",
                    data: [@Model.GraphPressureReadings],
                }
                ]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });
    </script>
}
